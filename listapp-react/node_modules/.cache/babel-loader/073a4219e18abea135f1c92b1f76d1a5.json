{"ast":null,"code":"var _jsxFileName = \"/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js\";\nimport \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Line(props) {\n  let clicked = \"false\";\n\n  function emptyCheck(props) {\n    return props.field !== \"\";\n  }\n\n  function clearer(p, x) {\n    if (p === \"true\") {\n      return \" \";\n    } else {\n      return x;\n    }\n  }\n\n  function lineLogic(props) {\n    if (emptyCheck(props)) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkboxes\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          type: \"text\",\n          onClick: e => {\n            e.stopPropagation();\n\n            if (props.isTapLine) {\n              clicked = \"true\";\n            }\n\n            ;\n          },\n          onChange: e => props.onLineChangeField(props.line.key, e.target.value),\n          value: clearer(clicked, props.line.field)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"emptyCheckbox\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          disabled: true,\n          type: \"text\",\n          value: props.field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-lines\",\n    children: lineLogic(props)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Line;\nexport default Line;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js"],"names":["Line","props","clicked","emptyCheck","field","clearer","p","x","lineLogic","e","stopPropagation","isTapLine","onLineChangeField","line","key","target","value"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAO,qBAAP;;;AAEA,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACjB,MAAIC,OAAO,GAAG,OAAd;;AACA,WAASC,UAAT,CAAoBF,KAApB,EAA2B;AACvB,WACIA,KAAK,CAACG,KAAN,KAAgB,EADpB;AAGH;;AACD,WAASC,OAAT,CAAiBC,CAAjB,EAAmBC,CAAnB,EAAsB;AAClB,QAAID,CAAC,KAAK,MAAV,EAAkB;AACd,aAAO,GAAP;AACH,KAFD,MAGK;AACD,aAAQC,CAAR;AACH;AACJ;;AACD,WAASC,SAAT,CAAmBP,KAAnB,EAA0B;AACtB,QAAIE,UAAU,CAACF,KAAD,CAAd,EAAuB;AACnB,0BAAQ;AAAA,gCACI;AAAO,UAAA,SAAS,EAAE,YAAlB;AACO,UAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAO,UAAA,SAAS,EAAE,WAAlB;AACO,UAAA,IAAI,EAAE,MADb;AAEO,UAAA,OAAO,EAAGQ,CAAD,IAAO;AACaA,YAAAA,CAAC,CAACC,eAAF;;AACA,gBAAIT,KAAK,CAACU,SAAV,EAAqB;AAACT,cAAAA,OAAO,GAAC,MAAR;AAAe;;AAAA;AACpC,WALrC;AAMO,UAAA,QAAQ,EACHO,CAAD,IAAOR,KAAK,CAACW,iBAAN,CAAwBX,KAAK,CAACY,IAAN,CAAWC,GAAnC,EAAwCL,CAAC,CAACM,MAAF,CAASC,KAAjD,CAPlB;AASO,UAAA,KAAK,EAAEX,OAAO,CAACH,OAAD,EAASD,KAAK,CAACY,IAAN,CAAWT,KAApB;AATrB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAgBH,KAjBD,MAkBK;AACD,0BAAQ;AAAA,gCACI;AAAO,UAAA,SAAS,EAAE,eAAlB;AACO,UAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAO,UAAA,SAAS,EAAE,WAAlB;AACO,UAAA,QAAQ,EAAE,IADjB;AAEO,UAAA,IAAI,EAAE,MAFb;AAGO,UAAA,KAAK,EAAEH,KAAK,CAACG;AAHpB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAUH;AACJ;;AACL,sBACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,cACKI,SAAS,CAACP,KAAD;AADd;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC;;KApDQD,I;AAsDT,eAAeA,IAAf","sourcesContent":["import \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\n\nfunction Line(props) {\n    let clicked = \"false\"\n    function emptyCheck(props) {\n        return (\n            props.field !== \"\"\n        );\n    }\n    function clearer(p,x) {\n        if (p === \"true\") {\n            return \" \";\n        }\n        else {\n            return (x);\n        }\n    }\n    function lineLogic(props) {\n        if (emptyCheck(props)) {\n            return (<li>\n                        <input className={\"checkboxes\"}\n                               type={\"checkbox\"}>\n                        </input>\n                        <input className={\"textboxes\"}\n                               type={\"text\"}\n                               onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            if (props.isTapLine) {clicked=\"true\"};\n                                                            }}\n                               onChange={\n                                   (e) => props.onLineChangeField(props.line.key, e.target.value)\n                               }\n                               value={clearer(clicked,props.line.field)}>\n                        </input>\n                    </li>);\n        }\n        else {\n            return (<li>\n                        <input className={\"emptyCheckbox\"}\n                               type={\"checkbox\"}>\n                        </input>\n                        <input className={\"textboxes\"}\n                               disabled={true}\n                               type={\"text\"}\n                               value={props.field}>\n                        </input>\n                    </li>);\n        }\n    }\nreturn (\n    <div className={\"all-lines\"}>\n        {lineLogic(props)}\n    </div>\n)\n}\n\nexport default Line;"]},"metadata":{},"sourceType":"module"}