{"ast":null,"code":"var _jsxFileName = \"/Users/cgcouto/cs124/lab2/listapp-react/src/LineData.js\";\nimport \"./LineData.css\";\nimport \"./Lab1EmptyList.css\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineData(props) {\n  const checkClasses = [\"checkboxes \"];\n  const textClasses = [\"textboxes \"];\n  const selectClasses = [\"select-button \"];\n  const itemClasses = [];\n  const divClasses = [];\n  let hideLine = props.hideChecks && props.line.checked;\n\n  if (props.position === props.length - 1) {\n    textClasses.push(\"italics \");\n  }\n\n  if (props.line.checked) {\n    textClasses.push(\"checked \");\n  }\n\n  if (!props.line.text_visible) {\n    textClasses.push(\"hidden \");\n  }\n\n  if (!props.line.check_visible) {\n    checkClasses.push(\"hidden \");\n  }\n\n  if (!props.line.select_visible) {\n    selectClasses.push(\"hidden \");\n  }\n\n  if (props.disableChecks) {\n    checkClasses.push(\"disabled \");\n  }\n\n  if (props.selected) {\n    textClasses.push(\"selected \");\n    itemClasses.push(\"selected \");\n    divClasses.push(\"yo \");\n  } else {\n    textClasses.push(\"normal \");\n  }\n\n  function clickTextWrapper(e, key) {\n    e.stopPropagation();\n    props.onEdited(key);\n  }\n\n  function changeCheckWrapper(e, key) {\n    props.onEdited(-1);\n    props.onItemChanged(key, \"checkbox\", e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: !hideLine && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"div1\",\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        id: \"li1\",\n        className: itemClasses.join(\" \"),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectClasses.join(\" \"),\n          onClick: e => props.onToggleSelected(props.line.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), props.checked && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: checkClasses.join(\" \"),\n          onChange: e => changeCheckWrapper(e, props.line.key),\n          checked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 31\n        }, this), !props.checked && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: checkClasses.join(\" \"),\n          onChange: e => changeCheckWrapper(e, props.line.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: textClasses.join(\" \"),\n          onClick: e => clickTextWrapper(e, props.line.key),\n          onChange: e => props.onItemChanged(props.line.key, \"text\", e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              console.log(\"YOU PRESSED ENTER\");\n              props.onItemChanged(props.line.key, e.key, props.text);\n              props.onEdited(props.line.key);\n            }\n\n            if (e.key === 'Backspace') {\n              props.onItemChanged(props.line.key, e.key, props.text);\n            }\n          },\n          value: props.text,\n          id: props.line.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_c = LineData;\nexport default LineData;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineData\");","map":{"version":3,"sources":["/Users/cgcouto/cs124/lab2/listapp-react/src/LineData.js"],"names":["Fragment","LineData","props","checkClasses","textClasses","selectClasses","itemClasses","divClasses","hideLine","hideChecks","line","checked","position","length","push","text_visible","check_visible","select_visible","disableChecks","selected","clickTextWrapper","e","key","stopPropagation","onEdited","changeCheckWrapper","onItemChanged","target","value","join","onToggleSelected","console","log","text"],"mappings":"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","sourcesContent":["import \"./LineData.css\";\nimport \"./Lab1EmptyList.css\";\nimport {Fragment} from \"react\";\n\nfunction LineData(props) {\n    const checkClasses = [\"checkboxes \"];\n    const textClasses = [\"textboxes \"];\n    const selectClasses = [\"select-button \"];\n    const itemClasses = [];\n    const divClasses = [];\n\n    let hideLine = props.hideChecks && props.line.checked;\n\n    if (props.position === props.length - 1) {\n        textClasses.push(\"italics \");\n    }\n    if (props.line.checked) {\n        textClasses.push(\"checked \");\n    }\n    if (!props.line.text_visible) {\n        textClasses.push(\"hidden \");\n    }\n    if (!props.line.check_visible) {\n        checkClasses.push(\"hidden \");\n    }\n    if (!props.line.select_visible)  {\n        selectClasses.push(\"hidden \");\n    }\n    if (props.disableChecks) {\n        checkClasses.push(\"disabled \");\n    }\n    if (props.selected) {\n        textClasses.push(\"selected \");\n        itemClasses.push(\"selected \");\n        divClasses.push(\"yo \");\n    } else {\n        textClasses.push(\"normal \");\n    }\n\n    function clickTextWrapper(e, key) {\n        e.stopPropagation();\n        props.onEdited(key);\n    }\n\n\n    function changeCheckWrapper(e, key) {\n        props.onEdited(-1);\n        props.onItemChanged(key,\"checkbox\",e.target.value);\n    }\n\nreturn (<Fragment>\n    {!hideLine && <div id={\"div1\"}>\n        <li id={\"li1\"} className={itemClasses.join(\" \")}>\n            <button className={selectClasses.join(\" \")} onClick={(e) => props.onToggleSelected(props.line.key)}></button>\n            {props.checked && <input type={\"checkbox\"}\n                   className={checkClasses.join(\" \")}\n                   onChange={(e) => changeCheckWrapper(e, props.line.key)} checked/>}\n            {!props.checked && <input type={\"checkbox\"}\n                                     className={checkClasses.join(\" \")}\n                                     onChange={(e) => changeCheckWrapper(e, props.line.key)}/>}\n            <input type={\"text\"}\n                   className={textClasses.join(\" \")}\n                   onClick={(e) => clickTextWrapper(e, props.line.key)}\n                   onChange={(e) => props.onItemChanged(props.line.key, \"text\", e.target.value)}\n                   onKeyDown={(e) =>\n                   {if (e.key === 'Enter') {\n                       console.log(\"YOU PRESSED ENTER\");\n                       props.onItemChanged(props.line.key, e.key, props.text);\n                       props.onEdited(props.line.key);\n                   } if (e.key === 'Backspace') {\n                       props.onItemChanged(props.line.key, e.key, props.text);\n                   }}}\n                   value={props.text}\n                   id={props.line.key}/>\n        </li>\n    </div>}\n    </Fragment>\n)\n}\n\nexport default LineData;"]},"metadata":{},"sourceType":"module"}