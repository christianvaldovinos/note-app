{"ast":null,"code":"var _jsxFileName = \"/Users/cgcouto/cs124/lab2/listapp-react/src/LineData.js\";\nimport \"./LineData.css\";\nimport \"./Lab1EmptyList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineData(props) {\n  const checkClasses = [\"checkboxes \"];\n  const textClasses = [\"textboxes \"];\n\n  if (!props.line.text_visible) {\n    textClasses.push(\"hidden\");\n  }\n\n  if (!props.line.check_visible) {\n    checkClasses.push(\"hidden\");\n  }\n\n  function clickTextWrapper(e, key) {\n    e.stopPropagation();\n    props.onEdited(key);\n  }\n\n  function changeCheckWrapper(newValue, key) {\n    props.onEdited(-1); // props.onItemChanged(key,\"checkbox\",newValue);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: checkClasses.join(\" \"),\n        onChange: e => changeCheckWrapper(e.target.value, props.line.key)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: textClasses.join(\" \"),\n        onClick: e => clickTextWrapper(e, props.line.key),\n        onChange: e => props.onItemChanged(props.line.key, \"text\", e.target.value),\n        value: props.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LineData;\nexport default LineData;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineData\");","map":{"version":3,"sources":["/Users/cgcouto/cs124/lab2/listapp-react/src/LineData.js"],"names":["LineData","props","checkClasses","textClasses","line","text_visible","push","check_visible","clickTextWrapper","e","key","stopPropagation","onEdited","changeCheckWrapper","newValue","join","target","value","onItemChanged","text"],"mappings":";AAAA,OAAO,gBAAP;AACA,OAAO,qBAAP;;;AAEA,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,QAAMC,YAAY,GAAG,CAAC,aAAD,CAArB;AACA,QAAMC,WAAW,GAAG,CAAC,YAAD,CAApB;;AAEA,MAAI,CAACF,KAAK,CAACG,IAAN,CAAWC,YAAhB,EAA8B;AAC1BF,IAAAA,WAAW,CAACG,IAAZ,CAAiB,QAAjB;AACH;;AACD,MAAI,CAACL,KAAK,CAACG,IAAN,CAAWG,aAAhB,EAA+B;AAC3BL,IAAAA,YAAY,CAACI,IAAb,CAAkB,QAAlB;AACH;;AAEL,WAASE,gBAAT,CAA0BC,CAA1B,EAA6BC,GAA7B,EAAkC;AAC9BD,IAAAA,CAAC,CAACE,eAAF;AACAV,IAAAA,KAAK,CAACW,QAAN,CAAeF,GAAf;AACH;;AAED,WAASG,kBAAT,CAA4BC,QAA5B,EAAsCJ,GAAtC,EAA2C;AACvCT,IAAAA,KAAK,CAACW,QAAN,CAAe,CAAC,CAAhB,EADuC,CAEvC;AACH;;AAED,sBACI;AAAA,2BACI;AAAA,8BACI;AAAO,QAAA,IAAI,EAAE,UAAb;AACO,QAAA,SAAS,EAAEV,YAAY,CAACa,IAAb,CAAkB,GAAlB,CADlB;AAEO,QAAA,QAAQ,EAAGN,CAAD,IAAOI,kBAAkB,CAACJ,CAAC,CAACO,MAAF,CAASC,KAAV,EAAiBhB,KAAK,CAACG,IAAN,CAAWM,GAA5B;AAF1C;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,IAAI,EAAE,MAAb;AACO,QAAA,SAAS,EAAEP,WAAW,CAACY,IAAZ,CAAiB,GAAjB,CADlB;AAEO,QAAA,OAAO,EAAGN,CAAD,IAAOD,gBAAgB,CAACC,CAAD,EAAIR,KAAK,CAACG,IAAN,CAAWM,GAAf,CAFvC;AAGO,QAAA,QAAQ,EAAGD,CAAD,IAAOR,KAAK,CAACiB,aAAN,CAAoBjB,KAAK,CAACG,IAAN,CAAWM,GAA/B,EAAoC,MAApC,EAA4CD,CAAC,CAACO,MAAF,CAASC,KAArD,CAHxB;AAIO,QAAA,KAAK,EAAEhB,KAAK,CAACkB;AAJpB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcC;;KAnCQnB,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import \"./LineData.css\";\nimport \"./Lab1EmptyList.css\";\n\nfunction LineData(props) {\n    const checkClasses = [\"checkboxes \"];\n    const textClasses = [\"textboxes \"];\n\n    if (!props.line.text_visible) {\n        textClasses.push(\"hidden\");\n    }\n    if (!props.line.check_visible) {\n        checkClasses.push(\"hidden\");\n    }\n\nfunction clickTextWrapper(e, key) {\n    e.stopPropagation();\n    props.onEdited(key);\n}\n\nfunction changeCheckWrapper(newValue, key) {\n    props.onEdited(-1);\n    // props.onItemChanged(key,\"checkbox\",newValue);\n}\n\nreturn (\n    <div>\n        <li>\n            <input type={\"checkbox\"}\n                   className={checkClasses.join(\" \")}\n                   onChange={(e) => changeCheckWrapper(e.target.value, props.line.key)}/>\n            <input type={\"text\"}\n                   className={textClasses.join(\" \")}\n                   onClick={(e) => clickTextWrapper(e, props.line.key)}\n                   onChange={(e) => props.onItemChanged(props.line.key, \"text\", e.target.value)}\n                   value={props.text}/>\n        </li>\n    </div>\n)\n}\n\nexport default LineData;"]},"metadata":{},"sourceType":"module"}