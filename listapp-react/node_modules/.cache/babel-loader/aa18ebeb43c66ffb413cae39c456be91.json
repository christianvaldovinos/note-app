{"ast":null,"code":"var _jsxFileName = \"/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js\";\nimport \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Line(props) {\n  function emptyCheck(props) {\n    return props.field !== \"\";\n  }\n\n  function clickWrapper() {\n    {\n      props.onClickLine(-1);\n    }\n    ;\n\n    if (props.isTapLine) {}\n\n    {\n      props.onMoveTapLine(props.tapLine);\n    }\n    ;\n  }\n\n  function lineLogic(props) {\n    if (props.clicked) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkboxes\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          type: \"text\",\n          onClick: e => {\n            e.stopPropagation();\n          },\n          onChange: e => props.onLineChangeField(props.line.key, e.target.value),\n          value: props.line.field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this);\n    } else if (emptyCheck(props)) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkboxes\",\n          type: \"checkbox\",\n          onChange: e => {\n            props.onCheck(props.line.key);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          type: \"text\",\n          onClick: e => {\n            {\n              props.onClickLine(props.line.key);\n            }\n            e.stopPropagation();\n          },\n          onChange: e => props.onLineChangeField(props.line.key, e.target.value),\n          value: props.line.field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"emptyCheckbox\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          disabled: true,\n          type: \"text\",\n          value: props.field,\n          onClick: () => console.log(\"yo\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-lines\",\n    onClick: e => clickWrapper(),\n    children: [lineLogic(props), console.log(props.position, props.isTapLine)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Line;\nexport default Line;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js"],"names":["Line","props","emptyCheck","field","clickWrapper","onClickLine","isTapLine","onMoveTapLine","tapLine","lineLogic","clicked","e","stopPropagation","onLineChangeField","line","key","target","value","onCheck","console","log","position"],"mappings":"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","sourcesContent":["import \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\n\nfunction Line(props) {\n    function emptyCheck(props) {\n        return (\n            props.field !== \"\"\n        );\n    }\n\n    function clickWrapper() {\n        {props.onClickLine(-1)};\n        if (props.isTapLine) {\n\n        }\n        {props.onMoveTapLine(props.tapLine)};\n    }\n\n    function lineLogic(props) {\n        if (props.clicked) {\n            return (<li>\n                <input className={\"checkboxes\"}\n                       type={\"checkbox\"}>\n                </input>\n                <input className={\"textboxes\"}\n                       type={\"text\"}\n                       onClick={(e) => {\n                           e.stopPropagation()\n                       }}\n                       onChange={\n                           (e) => props.onLineChangeField(props.line.key, e.target.value)\n                       }\n                       value={props.line.field}>\n                </input>\n            </li>)\n        } else if (emptyCheck(props)) {\n            return (<li>\n                <input className={\"checkboxes\"}\n                       type={\"checkbox\"}\n                       onChange={(e) => {props.onCheck(props.line.key)}}>\n                </input>\n                <input className={\"textboxes\"}\n                       type={\"text\"}\n                       onClick={(e) => {\n                           {props.onClickLine(props.line.key)}\n                           e.stopPropagation();\n                       }}\n                       onChange={\n                           (e) => props.onLineChangeField(props.line.key, e.target.value)\n                       }\n                       value={props.line.field}>\n                </input>\n            </li>);\n\n        } else {\n            return (<li>\n                <input className={\"emptyCheckbox\"}\n                       type={\"checkbox\"}>\n                </input>\n                <input className={\"textboxes\"}\n                       disabled={true}\n                       type={\"text\"}\n                       value={props.field}\n                       onClick={() => console.log(\"yo\")}>\n                </input>\n            </li>);\n        }\n    }\n\nreturn (\n    <div className={\"all-lines\"} onClick={(e) => clickWrapper()}>\n        {lineLogic(props)}\n        {console.log(props.position, props.isTapLine)}\n    </div>\n)\n}\n\nexport default Line;"]},"metadata":{},"sourceType":"module"}