{"ast":null,"code":"var _jsxFileName = \"/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js\";\nimport \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Line(props) {\n  let word = \"Tap\";\n\n  function emptyCheck(props) {\n    return props.field !== \"\";\n  }\n\n  function lineLogic(props) {\n    if (emptyCheck(props)) {\n      if (props.isTapLine) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"checkboxes\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"textboxes\",\n            type: \"text\",\n            onClick: e => {\n              e.stopPropagation();\n              word = \"\";\n            },\n            onChange: e => props.onLineChangeField(props.line.key, e.target.value),\n            value: \"Not clicked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"checkboxes\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"textboxes\",\n            type: \"text\",\n            onClick: e => {\n              e.stopPropagation();\n            },\n            onChange: e => props.onLineChangeField(props.line.key, e.target.value),\n            value: props.line.field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"emptyCheckbox\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          disabled: true,\n          type: \"text\",\n          value: props.field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-lines\",\n    children: [lineLogic(props), console.log(props.isTapLine)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Line;\nexport default Line;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js"],"names":["Line","props","word","emptyCheck","field","lineLogic","isTapLine","e","stopPropagation","onLineChangeField","line","key","target","value","console","log"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAO,qBAAP;;;AAEA,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACjB,MAAIC,IAAI,GAAC,KAAT;;AACA,WAASC,UAAT,CAAoBF,KAApB,EAA2B;AACvB,WACIA,KAAK,CAACG,KAAN,KAAgB,EADpB;AAGH;;AAED,WAASC,SAAT,CAAmBJ,KAAnB,EAA0B;AACtB,QAAIE,UAAU,CAACF,KAAD,CAAd,EAAuB;AACnB,UAAIA,KAAK,CAACK,SAAV,EAAqB;AACjB,4BAAQ;AAAA,kCACJ;AAAO,YAAA,SAAS,EAAE,YAAlB;AACO,YAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,kBADI,eAIJ;AAAO,YAAA,SAAS,EAAE,WAAlB;AACO,YAAA,IAAI,EAAE,MADb;AAEO,YAAA,OAAO,EAAGC,CAAD,IAAO;AAACA,cAAAA,CAAC,CAACC,eAAF;AAAqBN,cAAAA,IAAI,GAAC,EAAL;AAAQ,aAFrD;AAGO,YAAA,QAAQ,EACHK,CAAD,IAAON,KAAK,CAACQ,iBAAN,CAAwBR,KAAK,CAACS,IAAN,CAAWC,GAAnC,EAAwCJ,CAAC,CAACK,MAAF,CAASC,KAAjD,CAJlB;AAMO,YAAA,KAAK,EAAE;AANd;AAAA;AAAA;AAAA;AAAA,kBAJI;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR;AAcH,OAfD,MAeO;AACH,4BAAQ;AAAA,kCACJ;AAAO,YAAA,SAAS,EAAE,YAAlB;AACO,YAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,kBADI,eAIJ;AAAO,YAAA,SAAS,EAAE,WAAlB;AACO,YAAA,IAAI,EAAE,MADb;AAEO,YAAA,OAAO,EAAGN,CAAD,IAAO;AACZA,cAAAA,CAAC,CAACC,eAAF;AACH,aAJR;AAKO,YAAA,QAAQ,EACHD,CAAD,IAAON,KAAK,CAACQ,iBAAN,CAAwBR,KAAK,CAACS,IAAN,CAAWC,GAAnC,EAAwCJ,CAAC,CAACK,MAAF,CAASC,KAAjD,CANlB;AAQO,YAAA,KAAK,EAAEZ,KAAK,CAACS,IAAN,CAAWN;AARzB;AAAA;AAAA;AAAA;AAAA,kBAJI;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR;AAgBH;AACJ,KAlCD,MAmCK;AACD,0BAAQ;AAAA,gCACI;AAAO,UAAA,SAAS,EAAE,eAAlB;AACO,UAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAO,UAAA,SAAS,EAAE,WAAlB;AACO,UAAA,QAAQ,EAAE,IADjB;AAEO,UAAA,IAAI,EAAE,MAFb;AAGO,UAAA,KAAK,EAAEH,KAAK,CAACG;AAHpB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAUH;AACJ;;AACL,sBACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,eACKC,SAAS,CAACJ,KAAD,CADd,EAEKa,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACK,SAAlB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMC;;KA/DQN,I;AAiET,eAAeA,IAAf","sourcesContent":["import \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\n\nfunction Line(props) {\n    let word=\"Tap\"\n    function emptyCheck(props) {\n        return (\n            props.field !== \"\"\n        );\n    }\n\n    function lineLogic(props) {\n        if (emptyCheck(props)) {\n            if (props.isTapLine) {\n                return (<li>\n                    <input className={\"checkboxes\"}\n                           type={\"checkbox\"}>\n                    </input>\n                    <input className={\"textboxes\"}\n                           type={\"text\"}\n                           onClick={(e) => {e.stopPropagation(); word=\"\"}}\n                           onChange={\n                               (e) => props.onLineChangeField(props.line.key, e.target.value)\n                           }\n                           value={\"Not clicked\"}>\n\n                    </input>\n                </li>);\n            } else {\n                return (<li>\n                    <input className={\"checkboxes\"}\n                           type={\"checkbox\"}>\n                    </input>\n                    <input className={\"textboxes\"}\n                           type={\"text\"}\n                           onClick={(e) => {\n                               e.stopPropagation()\n                           }}\n                           onChange={\n                               (e) => props.onLineChangeField(props.line.key, e.target.value)\n                           }\n                           value={props.line.field}>\n\n                    </input>\n                </li>);\n            }\n        }\n        else {\n            return (<li>\n                        <input className={\"emptyCheckbox\"}\n                               type={\"checkbox\"}>\n                        </input>\n                        <input className={\"textboxes\"}\n                               disabled={true}\n                               type={\"text\"}\n                               value={props.field}>\n                        </input>\n                    </li>);\n        }\n    }\nreturn (\n    <div className={\"all-lines\"}>\n        {lineLogic(props)}\n        {console.log(props.isTapLine)}\n    </div>\n)\n}\n\nexport default Line;"]},"metadata":{},"sourceType":"module"}