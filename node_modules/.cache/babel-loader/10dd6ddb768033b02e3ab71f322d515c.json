{"ast":null,"code":"var _jsxFileName = \"/Users/christianvaldovinos/Desktop/cs124-lab2/src/ListView.js\",\n    _s = $RefreshSig$();\n\nimport './ListView.css';\nimport LineList from './LineList.js';\nimport { Fragment, useState } from 'react';\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { collection, query, setDoc, doc, updateDoc, deleteDoc, orderBy } from \"firebase/firestore\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListView(props) {\n  _s();\n\n  // state data to be used later\n  const [selected, setSelected] = useState([]);\n  const [edited, setEdited] = useState(-1);\n  const [hidden, setHidden] = useState(false);\n  const [showWarning, setShowWarning] = useState(false);\n  const [showPriorities, setShowPriorities] = useState(false);\n  const [sort, setSort] = useState(\"creationAsc\");\n  const [sortOptions, setSortOptions] = useState(false);\n  let showDeleteButton = selected.length > 0;\n  let disableChecks = edited !== -1; // Sorts note based on the type of sort selected\n\n  const collectionDefault = collection(props.db, props.collection, props.listId, \"Notes\");\n\n  function collectionSelector() {\n    if (sort === \"creationDesc\") {\n      return query(collectionDefault, orderBy(\"created\", \"desc\"));\n    } else if (sort === \"textAsc\") {\n      return query(collectionDefault, orderBy(\"text\", \"asc\"));\n    } else if (sort === \"textDesc\") {\n      return query(collectionDefault, orderBy(\"text\", \"desc\"));\n    } else if (sort === \"priorityAsc\") {\n      return query(collectionDefault, orderBy(\"priority\", \"asc\"));\n    } else if (sort === \"priorityDesc\") {\n      return query(collectionDefault, orderBy(\"priority\", \"desc\"));\n    } else {\n      return query(collectionDefault);\n    }\n  }\n\n  const [list, loading, error] = useCollectionData(collectionSelector());\n\n  if (error) {\n    console.log(\"ERROR: List data failed to load from Firestore\");\n  } // Stores if someone is only a viewer\n\n\n  let canOnlyView = props.canView.includes(props.user.email) && !props.canEdit.includes(props.user.email); // Buttons begin as hidden but are displayed depending on the list length\n\n  let showHideButton = false;\n  let showSortButton = false;\n\n  if (!loading) {\n    showHideButton = list.filter(p => p.checked).length > 0;\n    showSortButton = list.length > 1;\n  }\n\n  function handleLineEdited(lineID) {\n    // if we're editing the bottommost 'Tap to Add Note' line and the text has changed, update our data/state\n    if (lineID !== -2 && document.getElementById('tempTapLine').value !== \"\") {\n      handleItemAdded(document.getElementById('tempTapLine').value);\n      document.getElementById('tempTapLine').value = \"\";\n    }\n\n    setEdited(lineID); // update edited line state\n  } // changes line data for textboxes, checkboxes, or special key presses\n\n\n  function handleItemChanged(itemID, field, newValue) {\n    if ([\"text\", \"check_visible\", \"select_visible\", \"checked\", \"priority\", \"created\"].includes(field)) {\n      void updateDoc(doc(props.db, props.collection, props.listId, \"Notes\", itemID), {\n        [field]: newValue\n      });\n    } // changes the active/\"clicked on\" element to body when enter is pressed\n\n\n    if (field === 'Enter') {\n      document.activeElement.blur();\n    } // deletes line if backspace is pressed while line is empty\n\n\n    if (field === 'Backspace') {\n      if (newValue === \"\") {\n        handleItemDeleted(itemID);\n\n        if (selected.includes(itemID)) {\n          handleToggleSelectedLines(itemID);\n        }\n      }\n    }\n  } // controls whether the hide button should be showing\n\n\n  function handleHideToggle() {\n    setHidden(!hidden);\n  } // deletes data from the list by filtering out selected keys\n\n\n  function handleDelete() {\n    selected.forEach(id => deleteDoc(doc(props.db, props.collection, props.listId, \"Notes\", id)));\n    setSelected([]); // no selected items remain, so update that\n\n    setShowWarning(false);\n  }\n\n  function handlePrioritySet(priority) {\n    selected.forEach(id => updateDoc(doc(props.db, props.collection, props.listId, \"Notes\", id), {\n      priority: priority\n    }));\n    setShowPriorities(false);\n  }\n\n  function changeSortOption(sortType) {\n    setSort(sortType);\n    setSortOptions(false);\n  }\n\n  function handleWarning() {\n    setShowWarning(true);\n  }\n\n  function handlePriority() {\n    setShowPriorities(true);\n  } // changes display of selected lines by filtering selected lines\n\n\n  function handleToggleSelectedLines(lineID) {\n    if (selected.includes(lineID)) {\n      setSelected(selected.filter(p => p !== lineID));\n    } else {\n      setSelected([...selected, lineID]);\n    }\n  } // deletes an item by filtering it out from the data\n\n\n  function handleItemDeleted(itemID) {\n    void deleteDoc(doc(props.db, props.collection, props.listId, \"Notes\", itemID));\n  } // adds an item by generating an id and using the passed in text\n\n\n  function handleItemAdded(textValue) {\n    const lineId = generateUniqueID();\n    void setDoc(doc(props.db, props.collection, props.listId, \"Notes\", lineId), {\n      key: lineId,\n      text: textValue,\n      checked: false,\n      created: 0,\n      priority: 0,\n      check_visible: true,\n      text_visible: true,\n      select_visible: true\n    });\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loadingScreen\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 16\n    }, this);\n  }\n\n  function tapLineType(e) {\n    if (e.key === 'Enter') {\n      handleItemAdded(document.getElementById('tempTapLine').value);\n      document.getElementById('tempTapLine').value = \"\";\n      document.activeElement.blur();\n      setEdited(-1);\n    }\n  } // generates extra blank lines at the bottom of each list\n\n\n  function getExtraLines() {\n    let extraLines = [];\n\n    for (let i = 0; i < 21; i++) {\n      extraLines.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"empty\",\n        onClick: () => handleLineEdited(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }, this));\n    }\n\n    return extraLines;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"top\",\n        onClick: () => {\n          handleLineEdited(-1);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"button-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            \"aria-label\": \"return to home\",\n            tabIndex: showWarning || showPriorities || sortOptions ? -1 : 1,\n            onClick: () => props.onListView(\"\"),\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), showSortButton && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sort-button\",\n            \"aria-label\": \"sort\",\n            tabIndex: showWarning || showPriorities || sortOptions ? -1 : 2,\n            onClick: () => setSortOptions(true),\n            children: [sort === \"textAsc\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sort-button-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortArrow\",\n                children: \"\\u2193\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortText\",\n                children: \"A Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 50\n            }, this), sort === \"textDesc\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sort-button-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortArrow\",\n                children: \"\\u2193\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortText\",\n                children: \"Z A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 51\n            }, this), sort === \"creationAsc\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sort-button-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortArrow\",\n                children: \"\\u2193\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortDate\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"date1\",\n                  children: \"JAN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"date2\",\n                  children: \"DEC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 54\n            }, this), sort === \"creationDesc\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sort-button-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortArrow\",\n                children: \"\\u2193\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortDate\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"date1\",\n                  children: \"DEC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"date2\",\n                  children: \"JAN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 55\n            }, this), sort === \"priorityAsc\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sort-button-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortArrow\",\n                children: \"\\u2193\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortText\",\n                children: \"1 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 54\n            }, this), sort === \"priorityDesc\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sort-button-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortArrow\",\n                children: \"\\u2193\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"sortText\",\n                children: \"3 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => {\n            handleLineEdited(-1);\n          },\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"lineList\",\n        onClick: () => {\n          handleLineEdited(-1);\n        },\n        children: /*#__PURE__*/_jsxDEV(LineList, {\n          lineList: list,\n          canOnlyView: canOnlyView,\n          selectedLines: selected,\n          hideChecks: hidden,\n          showDeleteButton: showDeleteButton,\n          showHideButton: showHideButton,\n          disableChecks: disableChecks,\n          onHideToggle: handleHideToggle,\n          onToggleSelected: handleToggleSelectedLines,\n          onItemChanged: handleItemChanged,\n          onItemDeleted: handleItemDeleted,\n          onTrash: handleWarning,\n          onPriority: handlePriority,\n          onEdited: handleLineEdited,\n          warning: showWarning || showPriorities || sortOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), showWarning && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"back\",\n          onClick: () => setShowWarning(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"The selected items will be \", /*#__PURE__*/_jsxDEV(\"font\", {\n              color: \"red\",\n              children: \"permanently deleted\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 52\n            }, this), \". Are you sure you want to delete these items?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"warningButtons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"no\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => setShowWarning(false),\n              children: \"No, Go Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"yes\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: handleDelete,\n              children: \"Yes, Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }, this), showPriorities && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"back\",\n          onClick: () => setShowPriorities(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"priorityMessage\",\n            children: \" Set priority value for selected items.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"priorityButtons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"priorityZero\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => handlePrioritySet(0),\n              children: \"Remove Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"priorityOne\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => handlePrioritySet(1),\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"priorityTwo\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => handlePrioritySet(2),\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"priorityThree\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => handlePrioritySet(3),\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 32\n      }, this), sortOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"back\",\n          onClick: () => setSortOptions(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"priorityMessage\",\n            children: \" Choose a sorting option.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"sortOptions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"creationAscButton\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => changeSortOption(\"creationAsc\"),\n              children: \" Oldest to Newest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"creationDescButton\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => changeSortOption(\"creationDesc\"),\n              children: \"Newest to Oldest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"textAscButton\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => changeSortOption(\"textAsc\"),\n              children: \"Alphabetical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"textDescButton\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => changeSortOption(\"textDesc\"),\n              children: \"Rev. Alphabetical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"priorityDescButton\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => changeSortOption(\"priorityAsc\"),\n              children: \"Priority (Low to High)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"priorityAscButton\",\n              className: \"warningOption\",\n              tabIndex: 0,\n              onClick: () => changeSortOption(\"priorityDesc\"),\n              children: \"Priority (High to Low)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"endList\",\n        tabIndex: -1,\n        \"aria-label\": \"Tap to Add Note Line\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          id: \"tapLine\",\n          tabIndex: -1,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"tempTapLine\",\n            disabled: canOnlyView,\n            className: \"tempTapClass\",\n            type: \"text\",\n            autoComplete: \"off\",\n            \"aria-label\": \"Type to Add Note line\",\n            tabIndex: showWarning || showPriorities || sortOptions ? -1 : 3,\n            onClick: () => setEdited(-2),\n            onChange: () => setEdited(-2),\n            onKeyDown: e => tapLineType(e),\n            defaultValue: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: document.activeElement.id !== 'tempTapLine' ? \"inactiveText\" : \"activeText\",\n            tabIndex: -1,\n            children: \"Tap to Add Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }, this), getExtraLines()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"bottom\",\n        onClick: () => {\n          handleLineEdited(-1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ListView, \"3l8fqgcp42OrWEW9K0XZzNJdFXk=\", false, function () {\n  return [useCollectionData];\n});\n\n_c = ListView;\nexport default ListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListView\");","map":{"version":3,"sources":["/Users/christianvaldovinos/Desktop/cs124-lab2/src/ListView.js"],"names":["LineList","Fragment","useState","generateUniqueID","collection","query","setDoc","doc","updateDoc","deleteDoc","orderBy","useCollectionData","ListView","props","selected","setSelected","edited","setEdited","hidden","setHidden","showWarning","setShowWarning","showPriorities","setShowPriorities","sort","setSort","sortOptions","setSortOptions","showDeleteButton","length","disableChecks","collectionDefault","db","listId","collectionSelector","list","loading","error","console","log","canOnlyView","canView","includes","user","email","canEdit","showHideButton","showSortButton","filter","p","checked","handleLineEdited","lineID","document","getElementById","value","handleItemAdded","handleItemChanged","itemID","field","newValue","activeElement","blur","handleItemDeleted","handleToggleSelectedLines","handleHideToggle","handleDelete","forEach","id","handlePrioritySet","priority","changeSortOption","sortType","handleWarning","handlePriority","textValue","lineId","key","text","created","check_visible","text_visible","select_visible","tapLineType","e","getExtraLines","extraLines","i","push","onListView","title"],"mappings":"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","sourcesContent":["import './ListView.css';\nimport LineList from './LineList.js';\nimport {Fragment, useState} from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { collection, query, setDoc, doc, updateDoc, deleteDoc, orderBy} from \"firebase/firestore\";\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\n\n\nfunction ListView(props) {\n\n    // state data to be used later\n    const [selected, setSelected] = useState([]);\n    const [edited, setEdited] = useState(-1);\n    const [hidden, setHidden] = useState(false);\n    const [showWarning, setShowWarning] = useState(false);\n    const [showPriorities, setShowPriorities] = useState(false);\n    const [sort, setSort] = useState(\"creationAsc\");\n    const [sortOptions, setSortOptions] = useState(false);\n    let showDeleteButton = selected.length > 0;\n    let disableChecks = (edited !== -1);\n\n    // Sorts note based on the type of sort selected\n    const collectionDefault = collection(props.db, props.collection, props.listId, \"Notes\");\n    function collectionSelector() {\n        if (sort === \"creationDesc\") {\n            return (query(collectionDefault,  orderBy(\"created\", \"desc\")))\n        } else if (sort === \"textAsc\") {\n            return (query(collectionDefault, orderBy(\"text\", \"asc\")))\n        } else if (sort === \"textDesc\") {\n            return (query(collectionDefault, orderBy(\"text\", \"desc\")))\n        } else if (sort === \"priorityAsc\") {\n            return (query(collectionDefault, orderBy(\"priority\", \"asc\")))\n        } else if (sort === \"priorityDesc\") {\n            return (query(collectionDefault, orderBy(\"priority\", \"desc\")))\n        } else{\n            return(query(collectionDefault))\n        }\n    }\n    const [list,loading,error] = useCollectionData(collectionSelector());\n\n    if (error) {\n        console.log(\"ERROR: List data failed to load from Firestore\")\n    }\n\n    // Stores if someone is only a viewer\n    let canOnlyView = props.canView.includes(props.user.email) && !props.canEdit.includes(props.user.email);\n\n    // Buttons begin as hidden but are displayed depending on the list length\n    let showHideButton = false;\n    let showSortButton = false;\n    if (!loading) {\n        showHideButton = list.filter(p => p.checked).length > 0;\n        showSortButton = list.length > 1;\n    }\n\n    function handleLineEdited(lineID) {\n        // if we're editing the bottommost 'Tap to Add Note' line and the text has changed, update our data/state\n        if (lineID !== -2 && document.getElementById('tempTapLine').value!==\"\") {\n                handleItemAdded(document.getElementById('tempTapLine').value);\n            document.getElementById('tempTapLine').value=\"\"\n        }\n        setEdited(lineID) // update edited line state\n    }\n\n    // changes line data for textboxes, checkboxes, or special key presses\n    function handleItemChanged(itemID, field, newValue) {\n        if ([\"text\", \"check_visible\", \"select_visible\", \"checked\", \"priority\", \"created\"].includes(field)) {\n            void updateDoc(doc(props.db, props.collection, props.listId, \"Notes\", itemID),\n                {\n                    [field]: newValue,\n                })\n        }\n        // changes the active/\"clicked on\" element to body when enter is pressed\n        if (field === 'Enter') {\n            document.activeElement.blur();\n        }\n        // deletes line if backspace is pressed while line is empty\n        if (field === 'Backspace') {\n            if (newValue === \"\") {\n                handleItemDeleted(itemID);\n                if (selected.includes(itemID)) {\n                    handleToggleSelectedLines(itemID);\n                }\n            }\n        }\n    }\n\n    // controls whether the hide button should be showing\n    function handleHideToggle() {\n        setHidden(!hidden);\n    }\n\n    // deletes data from the list by filtering out selected keys\n    function handleDelete() {\n        selected.forEach(id => deleteDoc(doc(props.db, props.collection, props.listId, \"Notes\", id)));\n        setSelected([]); // no selected items remain, so update that\n        setShowWarning(false);\n    }\n\n    function handlePrioritySet(priority) {\n        selected.forEach(id => updateDoc(doc(props.db, props.collection, props.listId, \"Notes\", id),{priority:priority}))\n        setShowPriorities(false);\n    }\n\n    function changeSortOption(sortType) {\n        setSort(sortType);\n        setSortOptions(false);\n    }\n\n    function handleWarning() {\n        setShowWarning(true);\n    }\n\n    function handlePriority() {\n        setShowPriorities(true);\n    }\n\n    // changes display of selected lines by filtering selected lines\n    function handleToggleSelectedLines(lineID) {\n        if (selected.includes(lineID)) {\n            setSelected(selected.filter((p) => p !== lineID))\n        } else {\n            setSelected([...selected, lineID])\n        }\n    }\n\n    // deletes an item by filtering it out from the data\n    function handleItemDeleted(itemID) {\n        void deleteDoc(doc(props.db, props.collection, props.listId, \"Notes\", itemID));\n    }\n\n    // adds an item by generating an id and using the passed in text\n    function handleItemAdded(textValue) {\n        const lineId = generateUniqueID();\n        void setDoc(doc(props.db, props.collection, props.listId, \"Notes\", lineId),\n            {\n                key: lineId,\n                text: textValue,\n                checked: false,\n                created: 0,\n                priority: 0,\n                check_visible: true,\n                text_visible: true,\n                select_visible: true\n            })\n    }\n\n    if (loading) {\n        return <div id={\"loadingScreen\"}>Loading...\n        </div>;\n    }\n\n\n    function tapLineType(e) {\n        if (e.key=== 'Enter') {\n            handleItemAdded(document.getElementById('tempTapLine').value);\n            document.getElementById('tempTapLine').value=\"\";\n            document.activeElement.blur();\n            setEdited(-1);\n        }\n    }\n    // generates extra blank lines at the bottom of each list\n    function getExtraLines() {\n        let extraLines = [];\n        for (let i = 0; i < 21; i++) {\n            extraLines.push(<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>)\n        }\n        return extraLines\n    }\n\n\n    return (<Fragment>\n        <div id=\"container\">\n            <div id={\"top\"} onClick={() => {\n                handleLineEdited(-1)\n            }}>\n                <div id={\"button-div\"}>\n                    <button className=\"back-button\" aria-label={\"return to home\"}\n                            tabIndex={(showWarning || showPriorities || sortOptions) ? -1 : 1}\n                            onClick={() => (props.onListView(\"\"))}>&larr;</button>\n                    {showSortButton && <button className=\"sort-button\"\n                                               aria-label={\"sort\"}\n                                               tabIndex={(showWarning || showPriorities || sortOptions) ? -1 : 2}\n                                               onClick={() => setSortOptions(true)}>\n\n                        {(sort === \"textAsc\") && <div className={\"sort-button-display\"}>\n                            <div id={\"sortArrow\"}>&darr;</div>\n                            <div id={\"sortText\"}>A Z</div>\n                        </div>}\n                        {(sort === \"textDesc\") && <div className={\"sort-button-display\"}>\n                            <div id={\"sortArrow\"}>&darr;</div>\n                            <div id={\"sortText\"}>Z A</div>\n                        </div>}\n                        {(sort === \"creationAsc\") && <div className={\"sort-button-display\"}>\n                            <div id={\"sortArrow\"}>&darr;</div>\n                            <div id={\"sortDate\"}>\n                                <div id={\"date1\"}>JAN</div>\n                                <div id={\"date2\"}>DEC</div>\n                            </div>\n                        </div>}\n                        {(sort === \"creationDesc\") && <div className={\"sort-button-display\"}>\n                            <div id={\"sortArrow\"}>&darr;</div>\n                            <div id={\"sortDate\"}>\n                                <div id={\"date1\"}>DEC</div>\n                                <div id={\"date2\"}>JAN</div>\n                            </div>\n                        </div>}\n                        {(sort === \"priorityAsc\") && <div className={\"sort-button-display\"}>\n                            <div id={\"sortArrow\"}>&darr;</div>\n                            <div id={\"sortText\"}>1 3</div>\n                        </div>}\n                        {(sort === \"priorityDesc\") && <div className={\"sort-button-display\"}>\n                            <div id={\"sortArrow\"}>&darr;</div>\n                            <div id={\"sortText\"}>3 1</div>\n                        </div>}\n                    </button>}\n                </div>\n\n            </div>\n\n            <div id={\"title\"}><h2 onClick={() => {\n                handleLineEdited(-1)\n            }}>{props.title}</h2></div>\n            <div id={\"lineList\"} onClick={() => {\n                handleLineEdited(-1)\n            }}>\n                <LineList lineList={list}\n                          canOnlyView={canOnlyView}\n                          selectedLines={selected}\n                          hideChecks={hidden}\n                          showDeleteButton={showDeleteButton}\n                          showHideButton={showHideButton}\n                          disableChecks={disableChecks}\n                          onHideToggle={handleHideToggle}\n                          onToggleSelected={handleToggleSelectedLines}\n                          onItemChanged={handleItemChanged}\n                          onItemDeleted={handleItemDeleted}\n                          onTrash={handleWarning}\n                          onPriority={handlePriority}\n                          onEdited={handleLineEdited}\n                          warning={(showWarning || showPriorities || sortOptions)}\n                />\n            </div>\n            {/*<div className={\"line\"}><div id={\"textboxDiv\"}><input type={\"text\"}className={\"textboxes\"}/></div></div>*/}\n            {showWarning && <div className={\"popup\"}>\n                <div id={\"back\"} onClick={() => setShowWarning(false)}/>\n                <div id={\"warning\"}>\n                    <div>\n                        The selected items will be <font color={\"red\"}>permanently deleted</font>.\n                        Are you sure you want to delete these items?\n                    </div>\n                    <div id={\"warningButtons\"}>\n                        <button id={\"no\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => setShowWarning(false)}>No, Go Back\n                        </button>\n                        <button id={\"yes\"} className={\"warningOption\"} tabIndex={0} onClick={handleDelete}>Yes, Delete\n                        </button>\n                    </div>\n                </div>\n            </div>}\n            {showPriorities && <div className={\"popup\"}>\n                <div id={\"back\"} onClick={() => setShowPriorities(false)}/>\n                <div id={\"warning\"}>\n                    <div id={\"priorityMessage\"}> Set priority value for selected items.</div>\n                    <div id={\"priorityButtons\"}>\n                        <button id={\"priorityZero\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => handlePrioritySet(0)}>Remove Priority\n                        </button>\n                        <button id={\"priorityOne\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => handlePrioritySet(1)}>1\n                        </button>\n                        <button id={\"priorityTwo\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => handlePrioritySet(2)}>2\n                        </button>\n                        <button id={\"priorityThree\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => handlePrioritySet(3)}>3\n                        </button>\n\n                    </div>\n                </div>\n            </div>}\n            {sortOptions && <div className={\"popup\"}>\n                <div id={\"back\"} onClick={() => setSortOptions(false)}/>\n                <div id={\"warning\"}>\n                    <div id={\"priorityMessage\"}> Choose a sorting option.</div>\n                    <div id={\"sortOptions\"}>\n                        <button id={\"creationAscButton\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => changeSortOption(\"creationAsc\")}> Oldest to Newest\n                        </button>\n                        <button id={\"creationDescButton\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => changeSortOption(\"creationDesc\")}>Newest to Oldest\n                        </button>\n                        <button id={\"textAscButton\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => changeSortOption(\"textAsc\")}>Alphabetical\n                        </button>\n                        <button id={\"textDescButton\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => changeSortOption(\"textDesc\")}>Rev. Alphabetical\n                        </button>\n                        <button id={\"priorityDescButton\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => changeSortOption(\"priorityAsc\")}>Priority (Low to High)\n                        </button>\n                        <button id={\"priorityAscButton\"} className={\"warningOption\"} tabIndex={0}\n                                onClick={() => changeSortOption(\"priorityDesc\")}>Priority (High to Low)\n                        </button>\n                    </div>\n                </div>\n            </div>}\n            <ul id={\"endList\"} tabIndex={-1} aria-label={\"Tap to Add Note Line\"}>\n                <li id={\"tapLine\"} tabIndex={-1}>\n                    <input id={\"tempTapLine\"}\n                           disabled={canOnlyView}\n                           className={\"tempTapClass\"}\n                           type={\"text\"}\n                           autoComplete={\"off\"}\n                           aria-label={\"Type to Add Note line\"}\n                           tabIndex={(showWarning || showPriorities || sortOptions) ? -1 : 3}\n                           onClick={() => setEdited(-2)}\n                           onChange={() => setEdited(-2)}\n                           onKeyDown={(e) => tapLineType(e)}\n                           defaultValue={\"\"}\n                    />\n                    <div className={document.activeElement.id !== 'tempTapLine' ? \"inactiveText\" : \"activeText\"}\n                         tabIndex={-1}>Tap to Add Note\n                    </div>\n                </li>\n                {getExtraLines()}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n                {/*<li className={\"empty\"} onClick={() => handleLineEdited(-1)}/>*/}\n\n            </ul>\n            <div id={\"bottom\"} onClick={() => {\n                handleLineEdited(-1)\n            }}/>\n        </div>\n    </Fragment>);\n}\n\nexport default ListView;\n"]},"metadata":{},"sourceType":"module"}