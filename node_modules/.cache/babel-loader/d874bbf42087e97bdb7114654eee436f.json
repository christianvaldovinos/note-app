{"ast":null,"code":"var _jsxFileName = \"/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js\";\nimport \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Line(props) {\n  function emptyCheck(props) {\n    return props.field !== \"\";\n  }\n\n  function lineLogic(props) {\n    if (props.clicked === \"true\") {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [console.log(\"case 1\"), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkboxes\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          type: \"text\",\n          onClick: e => {\n            e.stopPropagation();\n          },\n          onChange: e => props.onLineChangeField(props.line.key, e.target.value),\n          value: props.line.field,\n          children: console.log(props.line.field)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }, this);\n    } else if (emptyCheck(props)) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"checkboxes\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"textboxes\",\n            type: \"text\",\n            onClick: e => {\n              e.stopPropagation();\n              {\n                props.onClickLine(props.line.key);\n              }\n            },\n            onChange: e => props.onLineChangeField(props.line.key, e.target.value),\n            value: props.line.field,\n            children: console.log(props.line.field)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), \"props.line.clicked=\", \"false\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"emptyCheckbox\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          disabled: true,\n          type: \"text\",\n          value: props.field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-lines\",\n    children: [lineLogic(props), console.log(props.isClicked)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Line;\nexport default Line;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js"],"names":["Fragment","Line","props","emptyCheck","field","lineLogic","clicked","console","log","e","stopPropagation","onLineChangeField","line","key","target","value","onClickLine","isClicked"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAO,qBAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,WAASC,UAAT,CAAoBD,KAApB,EAA2B;AACvB,WACIA,KAAK,CAACE,KAAN,KAAgB,EADpB;AAGH;;AAGD,WAASC,SAAT,CAAmBH,KAAnB,EAA0B;AACtB,QAAIA,KAAK,CAACI,OAAN,KAAkB,MAAtB,EAA8B;AAC1B,0BAAQ;AAAA,mBACHC,OAAO,CAACC,GAAR,CAAY,QAAZ,CADG,eAEJ;AAAO,UAAA,SAAS,EAAE,YAAlB;AACO,UAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,gBAFI,eAKJ;AAAO,UAAA,SAAS,EAAE,WAAlB;AACO,UAAA,IAAI,EAAE,MADb;AAEO,UAAA,OAAO,EAAGC,CAAD,IAAO;AACZA,YAAAA,CAAC,CAACC,eAAF;AACH,WAJR;AAMO,UAAA,QAAQ,EACHD,CAAD,IAAOP,KAAK,CAACS,iBAAN,CAAwBT,KAAK,CAACU,IAAN,CAAWC,GAAnC,EAAwCJ,CAAC,CAACK,MAAF,CAASC,KAAjD,CAPlB;AASO,UAAA,KAAK,EAAEb,KAAK,CAACU,IAAN,CAAWR,KATzB;AAAA,oBAUKG,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACU,IAAN,CAAWR,KAAvB;AAVL;AAAA;AAAA;AAAA;AAAA,gBALI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAkBH,KAnBD,MAmBO,IAAID,UAAU,CAACD,KAAD,CAAd,EAAuB;AAC1B,0BAAQ,QAAC,QAAD;AAAA,gCACJ;AAAA,kCACI;AAAO,YAAA,SAAS,EAAE,YAAlB;AACO,YAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAO,YAAA,SAAS,EAAE,WAAlB;AACO,YAAA,IAAI,EAAE,MADb;AAEO,YAAA,OAAO,EAAGO,CAAD,IAAO;AACZA,cAAAA,CAAC,CAACC,eAAF;AACA;AAACR,gBAAAA,KAAK,CAACc,WAAN,CAAkBd,KAAK,CAACU,IAAN,CAAWC,GAA7B;AAAkC;AACtC,aALR;AAOO,YAAA,QAAQ,EACHJ,CAAD,IAAOP,KAAK,CAACS,iBAAN,CAAwBT,KAAK,CAACU,IAAN,CAAWC,GAAnC,EAAwCJ,CAAC,CAACK,MAAF,CAASC,KAAjD,CARlB;AAUO,YAAA,KAAK,EAAEb,KAAK,CAACU,IAAN,CAAWR,KAVzB;AAAA,sBAWKG,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACU,IAAN,CAAWR,KAAvB;AAXL;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADI,yBAoBY,OApBZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAuBH,KAxBM,MAwBA;AACH,0BAAQ;AAAA,gCACI;AAAO,UAAA,SAAS,EAAE,eAAlB;AACO,UAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAO,UAAA,SAAS,EAAE,WAAlB;AACO,UAAA,QAAQ,EAAE,IADjB;AAEO,UAAA,IAAI,EAAE,MAFb;AAGO,UAAA,KAAK,EAAEF,KAAK,CAACE;AAHpB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAUH;AACJ;;AACL,sBACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,eACKC,SAAS,CAACH,KAAD,CADd,EAEKK,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACe,SAAlB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMC;;KAvEQhB,I;AAyET,eAAeA,IAAf","sourcesContent":["import \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\nimport {Fragment} from \"react\";\n\nfunction Line(props) {\n    function emptyCheck(props) {\n        return (\n            props.field !== \"\"\n        );\n    }\n\n\n    function lineLogic(props) {\n        if (props.clicked === \"true\") {\n            return (<li>\n                {console.log(\"case 1\")}\n                <input className={\"checkboxes\"}\n                       type={\"checkbox\"}>\n                </input>\n                <input className={\"textboxes\"}\n                       type={\"text\"}\n                       onClick={(e) => {\n                           e.stopPropagation()\n                       }}\n\n                       onChange={\n                           (e) => props.onLineChangeField(props.line.key, e.target.value)\n                       }\n                       value={props.line.field}>\n                    {console.log(props.line.field)}\n                </input>\n            </li>)\n        } else if (emptyCheck(props)) {\n            return (<Fragment>\n                <li>\n                    <input className={\"checkboxes\"}\n                           type={\"checkbox\"}>\n                    </input>\n                    <input className={\"textboxes\"}\n                           type={\"text\"}\n                           onClick={(e) => {\n                               e.stopPropagation();\n                               {props.onClickLine(props.line.key)}\n                           }}\n\n                           onChange={\n                               (e) => props.onLineChangeField(props.line.key, e.target.value)\n                           }\n                           value={props.line.field}>\n                        {console.log(props.line.field)}\n\n                    </input>\n                </li>\n            props.line.clicked={\"false\"}\n            </Fragment>);\n\n        } else {\n            return (<li>\n                        <input className={\"emptyCheckbox\"}\n                               type={\"checkbox\"}>\n                        </input>\n                        <input className={\"textboxes\"}\n                               disabled={true}\n                               type={\"text\"}\n                               value={props.field}>\n                        </input>\n                    </li>);\n        }\n    }\nreturn (\n    <div className={\"all-lines\"}>\n        {lineLogic(props)}\n        {console.log(props.isClicked)}\n    </div>\n)\n}\n\nexport default Line;"]},"metadata":{},"sourceType":"module"}