{"ast":null,"code":"var _jsxFileName = \"/Users/cgcouto/cs124/lab2/listapp-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport './Lab1EmptyList.css';\nimport LineList from './LineList.js';\nimport { useState } from 'react';\nimport { generateUniqueID } from \"web-vitals/dist/modules/lib/generateUniqueID\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = [{\n  key: 0,\n  text: \"Tap to Add Note\",\n  checked: false,\n  check_visible: false,\n  text_visible: true\n}];\n\nfunction App() {\n  _s();\n\n  const [list, setList] = useState(initialData);\n  const [selected, setSelected] = useState([]);\n  const [edited, setEdited] = useState(-1);\n  let showButton = list.filter(item => item.checked === true).length > 0;\n  let showDeleteButton = selected.length > 0;\n  let disableChecks = edited !== -1;\n  console.log(selected);\n\n  function handleLineEdited(lineID) {\n    if (edited === list[list.length - 1].key && list[list.length - 1].text !== \"Tap to Add Note\") {\n      if (list[list.length - 1].text === \"\") {\n        handleItemChanged(list[list.length - 1].key, \"text\", \"Tap to Add Note\");\n      } else {\n        list[list.length - 1].check_visible = true;\n        handleItemAdded(\"Tap to Add Note\");\n      }\n    }\n\n    if (lineID === list[list.length - 1].key && edited !== lineID) {\n      handleItemChanged(lineID, \"text\", \"\");\n    }\n\n    setEdited(lineID);\n  }\n\n  function handleItemChanged(itemID, field, newValue) {\n    // if (edited === list[list.length-1].key && list[list.length-1].text !== \"Tap to Add Note\") {\n    //     if (list[list.length-1].text === \"\") {\n    //         handleItemChanged(list[list.length-1].key, \"text\", \"Tap to Add Note\");\n    //     } else {\n    //         list[list.length-1].check_visible = true;\n    //         handleItemAdded(\"Tap to Add Note\");\n    //     }\n    // }\n    // if (lineID === list[list.length-1].key && edited !== lineID) {\n    //     handleItemChanged(lineID, \"text\", \"\")\n    // }\n    // setEdited(lineID)\n    // console.log(lineID)\n    if (field === \"text\") {\n      if (newValue === \"\" && itemID !== list[list.length - 1].key) {\n        return handleItemDeleted(itemID);\n      }\n\n      return setList(list.map(p => p.key === itemID ? { ...p,\n        [field]: newValue\n      } : p));\n    }\n\n    if (field === \"checkbox\") {\n      setList(list.map(p => p.key === itemID ? { ...p,\n        checked: !p.checked\n      } : p));\n    }\n  }\n\n  function handleDeleteChecks() {\n    return setList(list.filter(p => p.checked === false));\n  }\n\n  function handleToggleSelectedLines(lineID) {\n    if (selected.includes(lineID)) {\n      setSelected(selected.filter(p => p === lineID));\n    } else {\n      setSelected([...selected, lineID]);\n    }\n  }\n\n  function handleHideChecks() {}\n\n  function handleItemDeleted(itemID) {\n    return setList(list.filter(p => p.key === itemID));\n  }\n\n  function handleItemAdded(textValue) {\n    setList([...list, {\n      key: generateUniqueID(),\n      text: textValue,\n      checked: false,\n      check_visible: false,\n      text_visible: true\n    }]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    onClick: e => {\n      handleLineEdited(-1);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"button-div\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" TITLE OF LIST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"yo\",\n      children: /*#__PURE__*/_jsxDEV(LineList, {\n        linelist: list,\n        listData: initialData,\n        showDeleteButton: showDeleteButton,\n        disableChecks: disableChecks,\n        onToggleSelected: handleToggleSelectedLines,\n        onItemChanged: handleItemChanged,\n        onItemDeleted: handleItemDeleted,\n        onDeleteChecks: handleDeleteChecks,\n        onItemAdded: handleItemAdded,\n        onEdited: handleLineEdited\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"TExOqw6J377B+4bu4ehqHNqdYz0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/cgcouto/cs124/lab2/listapp-react/src/App.js"],"names":["LineList","useState","generateUniqueID","initialData","key","text","checked","check_visible","text_visible","App","list","setList","selected","setSelected","edited","setEdited","showButton","filter","item","length","showDeleteButton","disableChecks","console","log","handleLineEdited","lineID","handleItemChanged","handleItemAdded","itemID","field","newValue","handleItemDeleted","map","p","handleDeleteChecks","handleToggleSelectedLines","includes","handleHideChecks","textValue","e"],"mappings":"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","sourcesContent":["import './App.css';\nimport './Lab1EmptyList.css';\nimport LineList from './LineList.js';\nimport {useState} from 'react';\nimport {generateUniqueID} from \"web-vitals/dist/modules/lib/generateUniqueID\";\n\nconst initialData = [\n    {\n        key: 0,\n        text: \"Tap to Add Note\",\n        checked: false,\n        check_visible: false,\n        text_visible: true\n    }\n]\n\n\n\nfunction App() {\nconst [list, setList] = useState(initialData);\nconst [selected, setSelected] = useState([]);\nconst [edited, setEdited] = useState(-1);\nlet showButton = (list.filter((item) => item.checked === true)).length > 0;\nlet showDeleteButton = selected.length > 0;\nlet disableChecks = edited !== -1;\n\nconsole.log(selected);\n\nfunction handleLineEdited(lineID) {\n\n    if (edited === list[list.length-1].key && list[list.length-1].text !== \"Tap to Add Note\") {\n        if (list[list.length-1].text === \"\") {\n            handleItemChanged(list[list.length-1].key, \"text\", \"Tap to Add Note\");\n        } else {\n            list[list.length-1].check_visible = true;\n            handleItemAdded(\"Tap to Add Note\");\n        }\n    }\n    if (lineID === list[list.length-1].key && edited !== lineID) {\n        handleItemChanged(lineID, \"text\", \"\")\n    }\n    setEdited(lineID)\n}\n\nfunction handleItemChanged(itemID, field, newValue) {\n\n    // if (edited === list[list.length-1].key && list[list.length-1].text !== \"Tap to Add Note\") {\n    //     if (list[list.length-1].text === \"\") {\n    //         handleItemChanged(list[list.length-1].key, \"text\", \"Tap to Add Note\");\n    //     } else {\n    //         list[list.length-1].check_visible = true;\n    //         handleItemAdded(\"Tap to Add Note\");\n    //     }\n    // }\n    // if (lineID === list[list.length-1].key && edited !== lineID) {\n    //     handleItemChanged(lineID, \"text\", \"\")\n    // }\n    // setEdited(lineID)\n    // console.log(lineID)\n\n    if (field === \"text\") {\n        if (newValue === \"\" && itemID !== list[list.length-1].key) {\n            return (handleItemDeleted(itemID));\n        }\n        return (\n            setList(list.map(\n                p => p.key === itemID ? {...p, [field]:newValue} : p))\n        );\n    }\n    if (field === \"checkbox\") {\n        setList(list.map(\n            p => p.key === itemID ? {...p, checked:(!p.checked)} : p))\n    }\n}\n\nfunction handleDeleteChecks() {\n    return (\n    setList(list.filter((p) => p.checked === false))\n    )\n}\n\nfunction handleToggleSelectedLines(lineID) {\n    if (selected.includes(lineID)) {\n        setSelected(selected.filter((p) => p === lineID))\n    } else {\n        setSelected([...selected, lineID])\n    }\n}\n\nfunction handleHideChecks() {\n}\n\nfunction handleItemDeleted(itemID) {\n    return(setList(list.filter((p) => p.key === itemID)));\n}\n\nfunction handleItemAdded(textValue) {\n    setList([...list,\n        {\n            key: generateUniqueID(),\n            text: textValue,\n            checked: false,\n            check_visible: false,\n            text_visible: true\n        }]);\n}\n\n    return(\n        <div id=\"container\" onClick= {(e) => {handleLineEdited(-1)}}>\n            <div id=\"button-div\">\n                <button className=\"back-button\">&larr;</button>\n            </div>\n            <div id=\"title\"><h2> TITLE OF LIST</h2></div>\n            <div id={\"yo\"}>\n                <LineList linelist={list}\n                          listData={initialData}\n                          showDeleteButton={showDeleteButton}\n                          disableChecks={disableChecks}\n                          onToggleSelected={handleToggleSelectedLines}\n                          onItemChanged={handleItemChanged}\n                          onItemDeleted={handleItemDeleted}\n                          onDeleteChecks = {handleDeleteChecks}\n                          onItemAdded={handleItemAdded}\n                          onEdited={handleLineEdited}\n                          />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}