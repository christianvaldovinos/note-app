{"ast":null,"code":"var _jsxFileName = \"/Users/cgcouto/cs124/lab4/src/LineData.js\";\nimport \"./LineData.css\"; // import \"./Lab1EmptyList.css\";\n\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineData(props) {\n  // lists that help us assign specific CSS classes to elements based on state\n  const checkClasses = [\"checkboxes \"];\n  const textClasses = [\"textboxes \"];\n  const selectClasses = [\"select-button \"];\n  const itemClasses = [];\n  const divClasses = []; // hides line if hide button is clicked and item is completed\n\n  const hideLine = props.hideChecks && props.line.checked; // display of lines is altered by pushing classes based on the values of the line fields\n\n  if (props.position === props.length - 1 && props.disableChecks === false) {\n    textClasses.push(\"italics \");\n  }\n\n  if (props.line.checked) {\n    textClasses.push(\"checked \");\n  }\n\n  if (!props.line.text_visible) {\n    textClasses.push(\"hidden \");\n  }\n\n  if (!props.line.check_visible) {\n    checkClasses.push(\"hidden \");\n  }\n\n  if (!props.line.select_visible) {\n    selectClasses.push(\"hidden \");\n  }\n\n  if (props.disableChecks) {\n    checkClasses.push(\"disabled \");\n  }\n\n  if (props.selected) {\n    textClasses.push(\"selected \");\n    itemClasses.push(\"selected \");\n    divClasses.push(\"yo \");\n  } else {\n    textClasses.push(\"normal \");\n  } // updates the values which indicate which line we have clicked on\n\n\n  function clickTextWrapper(e, key) {\n    e.stopPropagation();\n    props.onEdited(key);\n  } // updates the value of a checkbox when we click on it\n\n\n  function changeCheckWrapper(e, key) {\n    props.onEdited(-1);\n    props.onItemChanged(key, \"checked\", props.line.checked ? !props.line.checked : {});\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: !hideLine && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        className: itemClasses.join(\" \"),\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectClasses.join(\" \"),\n          onClick: e => props.onToggleSelected(props.line.key),\n          children: props.anySelected && !!props.priority && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"selectButtonText\",\n            children: props.priority\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 161\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), props.checked && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: checkClasses.join(\" \"),\n          onChange: e => changeCheckWrapper(e, props.line.key),\n          checked: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 39\n        }, this), !props.checked && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          className: checkClasses.join(\" \"),\n          onChange: e => changeCheckWrapper(e, props.line.key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: textClasses.join(\" \"),\n          onClick: e => clickTextWrapper(e, props.line.key),\n          onChange: e => props.onItemChanged(props.line.key, \"text\", e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              props.onItemChanged(props.line.key, e.key, props.text);\n              props.onEdited(props.line.key);\n            }\n\n            if (e.key === 'Backspace') {\n              props.onItemChanged(props.line.key, e.key, props.text);\n            }\n          },\n          value: props.text,\n          id: props.line.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }, this);\n}\n\n_c = LineData;\nexport default LineData;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineData\");","map":{"version":3,"sources":["/Users/cgcouto/cs124/lab4/src/LineData.js"],"names":["Fragment","LineData","props","checkClasses","textClasses","selectClasses","itemClasses","divClasses","hideLine","hideChecks","line","checked","position","length","disableChecks","push","text_visible","check_visible","select_visible","selected","clickTextWrapper","e","key","stopPropagation","onEdited","changeCheckWrapper","onItemChanged","join","onToggleSelected","anySelected","priority","target","value","text"],"mappings":"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","sourcesContent":["import \"./LineData.css\";\n// import \"./Lab1EmptyList.css\";\nimport {Fragment} from \"react\";\n\nfunction LineData(props) {\n    // lists that help us assign specific CSS classes to elements based on state\n    const checkClasses = [\"checkboxes \"];\n    const textClasses = [\"textboxes \"];\n    const selectClasses = [\"select-button \"];\n    const itemClasses = [];\n    const divClasses = [];\n\n    // hides line if hide button is clicked and item is completed\n    const hideLine = props.hideChecks && props.line.checked;\n\n    // display of lines is altered by pushing classes based on the values of the line fields\n    if (props.position === props.length - 1 && props.disableChecks === false) {\n        textClasses.push(\"italics \");\n    }\n    if (props.line.checked) {\n        textClasses.push(\"checked \");\n    }\n    if (!props.line.text_visible) {\n        textClasses.push(\"hidden \");\n    }\n    if (!props.line.check_visible) {\n        checkClasses.push(\"hidden \");\n    }\n    if (!props.line.select_visible)  {\n        selectClasses.push(\"hidden \");\n    }\n    if (props.disableChecks) {\n        checkClasses.push(\"disabled \");\n    }\n    if (props.selected) {\n        textClasses.push(\"selected \");\n        itemClasses.push(\"selected \");\n        divClasses.push(\"yo \");\n    } else {\n        textClasses.push(\"normal \");\n    }\n\n    // updates the values which indicate which line we have clicked on\n    function clickTextWrapper(e, key) {\n        e.stopPropagation();\n        props.onEdited(key);\n    }\n\n    // updates the value of a checkbox when we click on it\n    function changeCheckWrapper(e, key) {\n        props.onEdited(-1);\n\n        props.onItemChanged(key,\"checked\", props.line.checked ? !props.line.checked : {} )\n    }\n\n    return (<Fragment>\n            {!hideLine && <div>\n                <li className={itemClasses.join(\" \")}>\n                    <button className={selectClasses.join(\" \")} onClick={(e) => props.onToggleSelected(props.line.key)}>{props.anySelected && !!props.priority&&<span className={\"selectButtonText\"}>{props.priority}</span>}</button>\n                    {props.checked && <input type={\"checkbox\"}\n                           className={checkClasses.join(\" \")}\n                           onChange={(e) => changeCheckWrapper(e, props.line.key)} checked/>}\n                    {!props.checked && <input type={\"checkbox\"}\n                                             className={checkClasses.join(\" \")}\n                                             onChange={(e) => changeCheckWrapper(e, props.line.key)}/>}\n                    <input type={\"text\"}\n                           className={textClasses.join(\" \")}\n                           onClick={(e) => clickTextWrapper(e, props.line.key)}\n                           onChange={(e) => props.onItemChanged(props.line.key, \"text\", e.target.value)}\n                           onKeyDown={(e) =>\n                           {if (e.key === 'Enter') {\n                               props.onItemChanged(props.line.key, e.key, props.text);\n                               props.onEdited(props.line.key);\n                           } if (e.key === 'Backspace') {\n                               props.onItemChanged(props.line.key, e.key, props.text);\n                           }}}\n                           value={props.text}\n                           id={props.line.key}/>\n                </li>\n            </div>}\n    </Fragment>)\n}\n\nexport default LineData;"]},"metadata":{},"sourceType":"module"}