{"ast":null,"code":"var _jsxFileName = \"/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js\";\nimport \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Line(props) {\n  function emptyCheck(props) {\n    return props.field !== \"\";\n  }\n\n  function lineLogic(props) {\n    if (props.clicked === \"true\") {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [console.log(\"case 1\"), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkboxes\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          type: \"text\",\n          onClick: e => {\n            e.stopPropagation();\n          },\n          onChange: e => props.onLineChangeField(props.line.key, e.target.value),\n          value: props.line.field,\n          children: console.log(props.line.field)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this);\n    } else if (emptyCheck(props)) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"checkboxes\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          type: \"text\",\n          onClick: e => {\n            e.stopPropagation();\n            {\n              props.onClickLine(props.line.key);\n            }\n          },\n          onChange: e => props.onLineChangeField(props.line.key, e.target.value),\n          value: props.line.field,\n          children: console.log(props.line.field)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"emptyCheckbox\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"textboxes\",\n          disabled: true,\n          type: \"text\",\n          value: props.field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"all-lines\",\n    children: [lineLogic(props), console.log(props.clicked)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Line;\nexport default Line;\n\nvar _c;\n\n$RefreshReg$(_c, \"Line\");","map":{"version":3,"sources":["/Users/cgcouto/cs124/lab2/listapp-react/src/Line.js"],"names":["Line","props","emptyCheck","field","lineLogic","clicked","console","log","e","stopPropagation","onLineChangeField","line","key","target","value","onClickLine"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAO,qBAAP;;;AAEA,SAASA,IAAT,CAAcC,KAAd,EAAqB;AACjB,WAASC,UAAT,CAAoBD,KAApB,EAA2B;AACvB,WACIA,KAAK,CAACE,KAAN,KAAgB,EADpB;AAGH;;AAGD,WAASC,SAAT,CAAmBH,KAAnB,EAA0B;AACtB,QAAIA,KAAK,CAACI,OAAN,KAAkB,MAAtB,EAA8B;AAC1B,0BAAQ;AAAA,mBACHC,OAAO,CAACC,GAAR,CAAY,QAAZ,CADG,eAEJ;AAAO,UAAA,SAAS,EAAE,YAAlB;AACO,UAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,gBAFI,eAKJ;AAAO,UAAA,SAAS,EAAE,WAAlB;AACO,UAAA,IAAI,EAAE,MADb;AAEO,UAAA,OAAO,EAAGC,CAAD,IAAO;AACZA,YAAAA,CAAC,CAACC,eAAF;AACH,WAJR;AAMO,UAAA,QAAQ,EACHD,CAAD,IAAOP,KAAK,CAACS,iBAAN,CAAwBT,KAAK,CAACU,IAAN,CAAWC,GAAnC,EAAwCJ,CAAC,CAACK,MAAF,CAASC,KAAjD,CAPlB;AASO,UAAA,KAAK,EAAEb,KAAK,CAACU,IAAN,CAAWR,KATzB;AAAA,oBAUKG,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACU,IAAN,CAAWR,KAAvB;AAVL;AAAA;AAAA;AAAA;AAAA,gBALI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAkBH,KAnBD,MAmBO,IAAID,UAAU,CAACD,KAAD,CAAd,EAAuB;AAC1B,0BAAQ;AAAA,gCACJ;AAAO,UAAA,SAAS,EAAE,YAAlB;AACO,UAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,gBADI,eAIJ;AAAO,UAAA,SAAS,EAAE,WAAlB;AACO,UAAA,IAAI,EAAE,MADb;AAEO,UAAA,OAAO,EAAGO,CAAD,IAAO;AACZA,YAAAA,CAAC,CAACC,eAAF;AACA;AAACR,cAAAA,KAAK,CAACc,WAAN,CAAkBd,KAAK,CAACU,IAAN,CAAWC,GAA7B;AAAkC;AACtC,WALR;AAOO,UAAA,QAAQ,EACHJ,CAAD,IAAOP,KAAK,CAACS,iBAAN,CAAwBT,KAAK,CAACU,IAAN,CAAWC,GAAnC,EAAwCJ,CAAC,CAACK,MAAF,CAASC,KAAjD,CARlB;AAUO,UAAA,KAAK,EAAEb,KAAK,CAACU,IAAN,CAAWR,KAVzB;AAAA,oBAWKG,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACU,IAAN,CAAWR,KAAvB;AAXL;AAAA;AAAA;AAAA;AAAA,gBAJI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAoBH,KArBM,MAqBA;AACH,0BAAQ;AAAA,gCACJ;AAAO,UAAA,SAAS,EAAE,eAAlB;AACO,UAAA,IAAI,EAAE;AADb;AAAA;AAAA;AAAA;AAAA,gBADI,eAIJ;AAAO,UAAA,SAAS,EAAE,WAAlB;AACO,UAAA,QAAQ,EAAE,IADjB;AAEO,UAAA,IAAI,EAAE,MAFb;AAGO,UAAA,KAAK,EAAEF,KAAK,CAACE;AAHpB;AAAA;AAAA;AAAA;AAAA,gBAJI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAUH;AACJ;;AAEL,sBACI;AAAK,IAAA,SAAS,EAAE,WAAhB;AAAA,eACKC,SAAS,CAACH,KAAD,CADd,EAEKK,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACI,OAAlB,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQC;;KAvEQL,I;AAyET,eAAeA,IAAf","sourcesContent":["import \"./Line.css\";\nimport \"./Lab1EmptyList.css\";\n\nfunction Line(props) {\n    function emptyCheck(props) {\n        return (\n            props.field !== \"\"\n        );\n    }\n\n\n    function lineLogic(props) {\n        if (props.clicked === \"true\") {\n            return (<li>\n                {console.log(\"case 1\")}\n                <input className={\"checkboxes\"}\n                       type={\"checkbox\"}>\n                </input>\n                <input className={\"textboxes\"}\n                       type={\"text\"}\n                       onClick={(e) => {\n                           e.stopPropagation()\n                       }}\n\n                       onChange={\n                           (e) => props.onLineChangeField(props.line.key, e.target.value)\n                       }\n                       value={props.line.field}>\n                    {console.log(props.line.field)}\n                </input>\n            </li>)\n        } else if (emptyCheck(props)) {\n            return (<li>\n                <input className={\"checkboxes\"}\n                       type={\"checkbox\"}>\n                </input>\n                <input className={\"textboxes\"}\n                       type={\"text\"}\n                       onClick={(e) => {\n                           e.stopPropagation();\n                           {props.onClickLine(props.line.key)}\n                       }}\n\n                       onChange={\n                           (e) => props.onLineChangeField(props.line.key, e.target.value)\n                       }\n                       value={props.line.field}>\n                    {console.log(props.line.field)}\n\n                </input>\n            </li>);\n\n        } else {\n            return (<li>\n                <input className={\"emptyCheckbox\"}\n                       type={\"checkbox\"}>\n                </input>\n                <input className={\"textboxes\"}\n                       disabled={true}\n                       type={\"text\"}\n                       value={props.field}>\n                </input>\n            </li>);\n        }\n    }\n\nreturn (\n    <div className={\"all-lines\"}>\n        {lineLogic(props)}\n        {console.log(props.clicked)}\n        {/*{props.line.clicked=\"false\"}*/}\n\n    </div>\n)\n}\n\nexport default Line;"]},"metadata":{},"sourceType":"module"}