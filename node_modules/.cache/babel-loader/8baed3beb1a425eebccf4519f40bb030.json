{"ast":null,"code":"var _jsxFileName = \"/Users/christianvaldovinos/Desktop/cs124-lab2/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport ListView from \"./ListView\";\nimport HomeView from \"./HomeView\";\nimport { useState } from 'react';\nimport { initializeApp } from \"firebase/app\";\nimport { arrayUnion, doc, getFirestore, updateDoc } from \"firebase/firestore\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { getAuth } from \"firebase/auth\";\nimport './App.css';\nimport SignInAndSignUp from \"./SignInAndSignUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDlfim9PmxloCfyskIlZd6xt2RxlWem-kw\",\n  authDomain: \"cs124-lab3-fe950.firebaseapp.com\",\n  projectId: \"cs124-lab3-fe950\",\n  storageBucket: \"cs124-lab3-fe950.appspot.com\",\n  messagingSenderId: \"331313494047\",\n  appId: \"1:331313494047:web:cab4818df13adc8c9cfd2a\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst db = getFirestore(firebaseApp);\nlet collectionName = \"Lists\"; // collection for each list passed in from ListView\n\nlet userDocName = \"b97qjRbVqp7TaMiZFdTQ\"; // document id that contains our list of registered user emails\n\nfunction App() {\n  _s();\n\n  const auth = getAuth();\n  const [user, loading, error] = useAuthState(auth);\n  const [showUserField, setShowUserField] = useState(\"\"); // updates active field\n\n  function handleShowUserField(value) {\n    if (value === showUserField) {\n      setShowUserField(\"\");\n    } else {\n      setShowUserField(value);\n    }\n  } // updates the list of all users\n\n\n  function handleUpdateUserDoc(userEmail) {\n    void updateDoc(doc(db, collectionName, userDocName), {\n      emails: arrayUnion(userEmail)\n    });\n  }\n\n  if (error) {\n    console.log(\"ERROR: Page failed to load\");\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"loading\",\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  } // if user signs in successfully then their email is added to all users list, and they see the signed in page\n\n\n  if (user) {\n    handleUpdateUserDoc(user.email);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SignedInApp, {\n        user: user,\n        auth: auth,\n        handleUpdateUserDoc: handleUpdateUserDoc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  } else {\n    // Menu before a user has signed in\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"signInPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"signInBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"loginTitle\",\n          children: \"Welcome to our notes app!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(SignInAndSignUp, {\n            auth: auth,\n            showUserField: showUserField,\n            handleShowUserField: handleShowUserField,\n            handleUpdateUserDoc: handleUpdateUserDoc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"authors\",\n          children: \"Created by: Christian and Chris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"notesPreview\",\n        alt: \"Notes app preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(App, \"AcQLdiGAV3PO6OxqlTHxWYAaWD4=\", false, function () {\n  return [useAuthState];\n});\n\n_c = App;\n\nfunction SignedInApp(props) {\n  _s2();\n\n  const [listId, setListId] = useState(0);\n  const [listView, setListView] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [canView, setCanView] = useState([]);\n  const [canEdit, setCanEdit] = useState([]); // updates corresponding information when we view a list\n\n  function handleListView(text, newId, canView, canEdit) {\n    setTitle(text);\n    setListId(newId);\n    setCanView(canView);\n    setCanEdit(canEdit);\n    setListView(!listView);\n  } // shows user's home page with all their notes when they have not clicked on a particular one\n\n\n  if (!listView) {\n    return /*#__PURE__*/_jsxDEV(HomeView, {\n      onListView: handleListView,\n      db: db,\n      user: props.user,\n      auth: props.auth,\n      collection: collectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this);\n  } else {\n    // shows an individual note\n    return /*#__PURE__*/_jsxDEV(ListView, {\n      onListView: handleListView,\n      title: title,\n      listId: listId,\n      canView: canView,\n      canEdit: canEdit,\n      db: db,\n      user: props.user,\n      collection: collectionName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s2(SignedInApp, \"jHQOfzsW9ILzmIYOhOTRxS1VmQw=\");\n\n_c2 = SignedInApp;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SignedInApp\");","map":{"version":3,"sources":["/Users/christianvaldovinos/Desktop/cs124-lab2/src/App.js"],"names":["ListView","HomeView","useState","initializeApp","arrayUnion","doc","getFirestore","updateDoc","useAuthState","getAuth","SignInAndSignUp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","db","collectionName","userDocName","App","auth","user","loading","error","showUserField","setShowUserField","handleShowUserField","value","handleUpdateUserDoc","userEmail","emails","console","log","email","SignedInApp","props","listId","setListId","listView","setListView","title","setTitle","canView","setCanView","canEdit","setCanEdit","handleListView","text","newId"],"mappings":"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","sourcesContent":["import ListView from \"./ListView\";\nimport HomeView from \"./HomeView\";\nimport {useState} from 'react';\nimport {initializeApp} from \"firebase/app\";\nimport {arrayUnion, doc, getFirestore, updateDoc} from \"firebase/firestore\";\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport {getAuth} from \"firebase/auth\";\nimport './App.css';\nimport SignInAndSignUp from \"./SignInAndSignUp\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDlfim9PmxloCfyskIlZd6xt2RxlWem-kw\",\n    authDomain: \"cs124-lab3-fe950.firebaseapp.com\",\n    projectId: \"cs124-lab3-fe950\",\n    storageBucket: \"cs124-lab3-fe950.appspot.com\",\n    messagingSenderId: \"331313494047\",\n    appId: \"1:331313494047:web:cab4818df13adc8c9cfd2a\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst db = getFirestore(firebaseApp);\nlet collectionName = \"Lists\"; // collection for each list passed in from ListView\nlet userDocName = \"b97qjRbVqp7TaMiZFdTQ\"; // document id that contains our list of registered user emails\n\nfunction App() {\n    const auth = getAuth();\n    const [user, loading, error] = useAuthState(auth);\n    const [showUserField, setShowUserField] = useState(\"\");\n\n    // updates active field\n    function handleShowUserField(value) {\n        if (value === showUserField){\n            setShowUserField(\"\")\n        } else{\n            setShowUserField(value);\n        }\n    }\n\n    // updates the list of all users\n    function handleUpdateUserDoc(userEmail) {\n        void updateDoc(doc(db, collectionName, userDocName),\n            {\n                emails: arrayUnion(userEmail)\n            })\n        }\n\n    if (error) {\n        console.log(\"ERROR: Page failed to load\")\n    }\n\n    if (loading) {\n        return (\n            <div id={\"loading\"}> Loading... </div>\n        )\n    }\n\n    // if user signs in successfully then their email is added to all users list, and they see the signed in page\n    if (user) {\n        handleUpdateUserDoc(user.email)\n        return (\n            <div>\n                <SignedInApp user={user} auth={auth} handleUpdateUserDoc={handleUpdateUserDoc}/>\n            </div>\n        )\n    } else {\n        // Menu before a user has signed in\n        return (\n            <div id={\"signInPage\"}>\n                <div id={\"signInBox\"}>\n                    <h1 id={\"loginTitle\"}>Welcome to our notes app!</h1>\n                    <div id={\"buttons\"}>\n                        <SignInAndSignUp\n                            auth={auth}\n                            showUserField={showUserField}\n                            handleShowUserField={handleShowUserField}\n                            handleUpdateUserDoc={handleUpdateUserDoc}/>\n                    </div>\n                    <p id={\"authors\"}>Created by: Christian and Chris</p>\n                </div>\n                <img id={\"notesPreview\"} alt={\"Notes app preview\"}/>\n            </div>\n        )\n    }\n}\n\n\nfunction SignedInApp(props) {\n    const [listId, setListId] = useState(0);\n    const [listView, setListView] = useState(false);\n    const [title,setTitle] = useState(\"\");\n    const [canView, setCanView] = useState([]);\n    const [canEdit, setCanEdit] = useState([]);\n\n    // updates corresponding information when we view a list\n   function handleListView(text, newId, canView, canEdit) {\n       setTitle(text);\n       setListId(newId);\n       setCanView(canView);\n       setCanEdit(canEdit);\n       setListView(!listView);\n   }\n\n   // shows user's home page with all their notes when they have not clicked on a particular one\n   if(!listView){\n        return (<HomeView onListView={handleListView}\n                          db={db}\n                          user={props.user}\n                          auth={props.auth}\n                          collection={collectionName}/>)\n   } else {\n        // shows an individual note\n        return (<ListView\n            onListView={handleListView}\n            title={title}\n            listId={listId}\n            canView={canView}\n            canEdit={canEdit}\n            db={db}\n            user={props.user}\n            collection={collectionName}/>)\n   }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}